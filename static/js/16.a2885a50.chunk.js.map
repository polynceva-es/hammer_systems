{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/clients/user-list/EditProfile.js","views/app-views/clients/user-list/index.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","EditProfile","Component","avatarEndpoint","state","avatarUrl","email","userName","phoneNumber","website","address","city","postcode","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","render","data","visible","close","this","width","placement","onClose","closable","Flex","alignItems","mobileFlex","UserOutlined","onChange","info","key","file","status","originFileObj","imageUrl","setState","message","success","content","duration","loading","showUploadList","action","layout","initialValues","username","phone","street","zipcode","onFinish","values","setTimeout","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","UserList","users","userProfileVisible","selectedUser","deleteUser","userId","filter","item","showUserProfile","userInfo","closeUserProfile","componentDidMount","tableColumns","title","dataIndex","_","record","sorter","compare","a","b","toLowerCase","role","length","date","moment","unix","format","lastOnline","color","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","padding","columns","dataSource","rowKey","connect","reduxStoreState"],"mappings":"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","file":"static/js/16.a2885a50.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Avatar,\r\n  Button,\r\n  Input,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Upload,\r\n  Drawer,\r\n} from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nexport class EditProfile extends Component {\r\n  avatarEndpoint = \"https://www.mocky.io/v2/5cc8019d300000980a055e76\";\r\n\r\n  state = {\r\n    avatarUrl: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    phoneNumber: \"\",\r\n    website: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    postcode: \"\",\r\n  };\r\n\r\n  getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  render() {\r\n    const onFinish = (values) => {\r\n      const key = \"updatable\";\r\n      message.loading({ content: \"Updating...\", key });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          name: values.name,\r\n          email: values.email,\r\n          userName: values.userName,\r\n          phoneNumber: values.phoneNumber,\r\n          website: values.website,\r\n          address: values.address,\r\n          city: values.city,\r\n          postcode: values.postcode,\r\n        });\r\n        message.success({ content: \"Done!\", key, duration: 2 });\r\n\t\tclose();\r\n      }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    const onUploadAavater = (info) => {\r\n      const key = \"updatable\";\r\n      if (info.file.status === \"uploading\") {\r\n        message.loading({ content: \"Uploading...\", key, duration: 1000 });\r\n        return;\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        this.getBase64(info.file.originFileObj, (imageUrl) =>\r\n          this.setState({\r\n            avatarUrl: imageUrl,\r\n          })\r\n        );\r\n        message.success({ content: \"Uploaded!\", key, duration: 1.5 });\r\n      }\r\n    };\r\n\r\n    const onRemoveAvater = () => {\r\n      this.setState({\r\n        avatarUrl: \"\",\r\n      });\r\n    };\r\n\r\n    const { data, visible, close } = this.props;\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={700}\r\n          placement=\"right\"\r\n          onClose={close}\r\n          closable={false}\r\n          visible={visible}\r\n        >\r\n          <Flex\r\n            alignItems=\"center\"\r\n            mobileFlex={false}\r\n            className=\"text-center text-md-left\"\r\n          >\r\n            <Avatar size={90} src={data?.img} icon={<UserOutlined />} />\r\n            <div className=\"ml-md-3 mt-md-0 mt-3\">\r\n              <Upload\r\n                onChange={onUploadAavater}\r\n                showUploadList={false}\r\n                action={this.avatarEndpoint}\r\n              >\r\n                <Button type=\"primary\">Change Avatar</Button>\r\n              </Upload>\r\n              <Button className=\"ml-2\" onClick={onRemoveAvater}>\r\n                Remove\r\n              </Button>\r\n            </div>\r\n          </Flex>\r\n          <div className=\"mt-4\">\r\n            <Form\r\n              name=\"basicInformation\"\r\n              layout=\"vertical\"\r\n              initialValues={{\r\n                name: data?.name,\r\n                email: data?.email,\r\n                username: data?.username,\r\n                phoneNumber: data?.phone,\r\n                website: data?.website,\r\n                address: data?.address.street,\r\n                city: data?.address.city,\r\n                postcode: data?.zipcode,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Row>\r\n                <Col xs={24} sm={24} md={24} lg={16}>\r\n                  <Row gutter={ROW_GUTTER}>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your name!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            type: \"email\",\r\n                            message: \"Please enter a valid email!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label=\"Date of Birth\" name=\"dateOfBirth\">\r\n                        <DatePicker className=\"w-100\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label=\"Phone Number\" name=\"phoneNumber\">\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label=\"Website\" name=\"website\">\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24}>\r\n                      <Form.Item label=\"Address\" name=\"address\">\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label=\"City\" name=\"city\">\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12}>\r\n                      <Form.Item label=\"Post code\" name=\"postcode\">\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Save Change\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Tag, Tooltip, message, Button } from \"antd\";\r\nimport { EyeOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = reduxStoreState => {\r\n  return({\r\n    users: reduxStoreState.users.users,\r\n    userProfileVisible: false,\r\n    selectedUser: null,\r\n  })\r\n}\r\n\r\nexport class UserList extends Component {\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.props.users,\r\n      userProfileVisible: this.props.userProfileVisible,\r\n      selectedUser: this.props.selectedUser,\r\n    })\r\n  }\r\n  state = {\r\n    users: this.props.users,\r\n    userProfileVisible: this.props.userProfileVisible,\r\n    selectedUser: this.props.selectedUser,\r\n  };\r\n\r\n  deleteUser = (userId) => {\r\n    this.setState({\r\n      users: this.state.users.filter((item) => item.id !== userId),\r\n    });\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n  };\r\n\r\n  showUserProfile = (userInfo) => {\r\n    this.setState({\r\n      userProfileVisible: true,\r\n      selectedUser: userInfo,\r\n    });\r\n  };\r\n\r\n  closeUserProfile = () => {\r\n    this.setState({\r\n      userProfileVisible: false,\r\n      selectedUser: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { users, userProfileVisible, selectedUser } = this.state;\r\n  \r\n    const tableColumns = [\r\n      {\r\n        title: \"User\",\r\n        dataIndex: \"name\",\r\n        render: (_, record) => (\r\n          <div className=\"d-flex\">\r\n            <AvatarStatus\r\n              src={record.img}\r\n              name={record.name}\r\n              subTitle={record.email}\r\n            />\r\n          </div>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            a = a.name.toLowerCase();\r\n            b = b.name.toLowerCase();\r\n            return a > b ? -1 : b > a ? 1 : 0;\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: \"Role\",\r\n        dataIndex: \"role\",\r\n        sorter: {\r\n          compare: (a, b) => a.role.length - b.role.length,\r\n        },\r\n      },\r\n      {\r\n        title: \"Last online\",\r\n        dataIndex: \"lastOnline\",\r\n        render: (date) => (\r\n          <span>{moment.unix(date).format(\"MM/DD/YYYY\")} </span>\r\n        ),\r\n        sorter: (a, b) =>\r\n          moment(a.lastOnline).unix() - moment(b.lastOnline).unix(),\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        render: (status) => (\r\n          <Tag\r\n            className=\"text-capitalize\"\r\n            color={status === \"active\" ? \"cyan\" : \"red\"}\r\n          >\r\n            {status}\r\n          </Tag>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => a.status.length - b.status.length,\r\n        },\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"actions\",\r\n        render: (_, elm) => (\r\n          <div className=\"text-right\">\r\n            <Tooltip title=\"View\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"mr-2\"\r\n                icon={<EyeOutlined />}\r\n                onClick={() => {\r\n                  this.showUserProfile(elm);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <Button\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => {\r\n                  this.deleteUser(elm.id);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <Card bodyStyle={{ padding: \"0px\" }}>\r\n        <Table columns={tableColumns} dataSource={users} rowKey=\"id\" />\r\n        <EditProfile\r\n          data={selectedUser}\r\n          visible={userProfileVisible}\r\n          close={() => {\r\n            this.closeUserProfile();\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserList);\r\n"],"sourceRoot":""}